services:
  postgres:
    image: postgres:17-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:z
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${WEBAPP_DB_USERNAME}:${WEBAPP_DB_PASSWORD} ${KC_DB_USERNAME}:${KC_DB_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --username=${WEBAPP_DB_USERNAME} &&
                            pg_isready --username=${KC_DB_USERNAME}" ]
      timeout: 5s
      interval: 5s
      retries: 5

  redis:
    image: redis:7.4.2-alpine
    volumes:
      - redis:/var/lib/redis/data

  keycloak:
    image: keycloak/keycloak:26.1
    command: [ "start", "--http-enabled", "true", "--import-realm" ]
    volumes:
      - ./keycloak-export:/opt/keycloak/data/import:z
      - keycloak:/opt/keycloak/data
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres/${KC_DBNAME}

      - KC_HOSTNAME_STRICT=false
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
    env_file:
      - .env
    volumes:
      - minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://localhost:9000/minio/health/cluster" ]
      timeout: 5s
      interval: 2s
      retries: 5

  minio-configurer:
    image: minio/mc:RELEASE.2025-05-21T01-59-54Z
    entrypoint: ["bin/sh", "/init-minio/minio-entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - ./init-minio:/init-minio:z
    depends_on:
      minio:
        condition: service_healthy

  webapp:
    build: .
    ports:
      - '443:8080'
    volumes:
      - ./certificate.p12:${KEY_STORE}:z
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
      minio-configurer:
        condition: service_completed_successfully

volumes:
  minio:
  redis:
  postgres:
  keycloak:
